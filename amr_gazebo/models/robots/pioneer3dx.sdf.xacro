<?xml version="1.0"?>
<sdf version="1.8" xmlns:xacro="http://ros.org/wiki/xacro">
  <model name="pioneer3dx">

    <xacro:property name="wheel_radius" value="0.12"/>
    <xacro:property name="wheel_width" value="0.04"/>
    <xacro:property name="caster_wheel_radius" value="0.0375"/>
    <xacro:property name="caster_wheel_width" value="0.01"/>


    <xacro:macro name="cylinder_inertia" params="m r h">
      <inertial>
        <pose>0 0 0 ${pi/2} 0 0</pose>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(m/12) * (3*r*r + h*h)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(m/12) * (3*r*r + h*h)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(m/2) * (r*r)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <!--
    <pose>0 0 0 0 0 0</pose>
    -->
    <link name="base_link"/>


    <!-- Chassis -->
    <link name="chassis">
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>3.5</mass>
        <inertia>
          <ixx>1</ixx>
          <iyy>1</iyy>
          <izz>1</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="chassis_visual">
        <geometry>
          <!--
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
          -->
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/chassis.stl</uri>
          </mesh>
        </geometry>
        <!--
        <material>
          <ambient>0.851 0 0 1</ambient>
          <diffuse>0.851 0 0 1</diffuse>
        </material>
        -->
      </visual>
      <collision name="chassis_collision">
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
      </collision>
    </link>

    <joint name="chassis_joint" type="fixed">
      <parent>base_link</parent>
      <child>chassis</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Top Plate -->
    <link name="top_plate">
      <pose>-0.045 0 0.234 0 0 0</pose>
      <inertial>
        <mass>0.01</mass>
        <inertia>
          <ixx>1</ixx><iyy>1</iyy><izz>1</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="top_plate_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/top.stl</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0.038 0.038 0.038 1</ambient>
          <diffuse>0.038 0.038 0.038 1</diffuse>
        </material>
      </visual>
    </link>

    <joint name="base_top_joint" type="fixed">
      <parent>base_link</parent>
      <child>top_plate</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Front Sonar -->
    <link name="front_sonar">
      <pose>-0.198 0 0.208 0 0 0</pose>
      <inertial>
        <mass>0.0001</mass>
        <inertia>
          <ixx>1</ixx><iyy>1</iyy><izz>1</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="front_sonar_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/front_sonar.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_front_joint" type="fixed">
      <parent>base_link</parent>
      <child>front_sonar</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Back Sonar -->
    <link name="back_sonar">
      <pose>0.109 0 0.209 0 0 0</pose>
      <inertial>
        <mass>0.0001</mass>
        <inertia>
          <ixx>1</ixx><iyy>1</iyy><izz>1</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="back_sonar_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/back_sonar.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_back_joint" type="fixed">
      <parent>base_link</parent>
      <child>back_sonar</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- Caster Swivel -->
    <link name="caster_swivel">
      <pose>-0.185 0 0.055 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.01</ixx><iyy>0.01</iyy><izz>0.01</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="caster_swivel_visual">
        <geometry>
          <mesh>
            <uri>package://amr_robots_description/meshes/p3dx_meshes/caster_swivel.stl</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name="base_caster_swivel_joint" type="fixed">
      <parent>base_link</parent>
      <child>caster_swivel</child>
      <axis><xyz>0 0 1</xyz></axis>
    </joint>

    <!-- Caster Wheel -->
    <link name="caster_wheel">
      <pose>-0.211 0 0.039 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0124</ixx><iyy>0.0152</iyy><izz>0.0117</izz>
          <ixy>0</ixy><ixz>0</ixz><iyz>0</iyz>
        </inertia>
      </inertial>
      <visual name="caster_wheel_visual">
        <geometry>
          <cylinder>
            <radius>${caster_wheel_radius}</radius>
            <length>${caster_wheel_width}</length>
          </cylinder>
        </geometry>
      </visual>
    </link>
    <joint name="caster_swivel_hubcap_joint" type="fixed">
      <parent>caster_swivel</parent>
      <child>caster_wheel</child>
      <axis><xyz>0 1 0</xyz></axis>
    </joint>

    <!-- Wheels & Hub -->
    <xacro:macro name="wheel" params="prefix y_offset">
      <!-- Wheel Hub -->
      <link name="${prefix}_hub">
        <pose>0 ${y_offset} 0.08 0 0 0</pose>
        <visual name="${prefix}_hub_visual">
          <geometry>
            <mesh>
              <uri>package://amr_robots_description/meshes/p3dx_meshes/${prefix}_hubcap.stl</uri>
            </mesh>
          </geometry>
        </visual>
      </link>

      <joint name="${prefix}_hub_joint" type="fixed">
        <parent>base_link</parent>
        <child>${prefix}_hub</child>
      </joint>

      <!-- Wheel -->
      <link name="${prefix}_wheel">
        <pose>0 ${y_offset} 0.08 0 0 0</pose> <!-- dit snap ik niet  -->
        <visual name="${prefix}_wheel_visual">
          <geometry>
            <mesh>
              <uri>package://amr_robots_description/meshes/p3dx_meshes/${prefix}_wheel.stl</uri>
            </mesh>
          </geometry>
          <material>
            <ambient>0.3 0.3 0.3 1.0</ambient>
            <diffuse>0.7 0.7 0.7 1.0</diffuse>
          </material>
        </visual>

        <!-- Wheel inertia -->
        <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
      </link>

      <!-- Revolute joint for wheel rotation -->
      <joint name="${prefix}_wheel_joint" type="revolute">
        <parent>${prefix}_hub</parent>
        <child>${prefix}_wheel</child>
        <!-- Move wheel along x so it lines up properly with hub -->
        <pose>0 0 0 0 0 0</pose>
        <!-- Rotation axis along Y -->
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e16</lower>
            <upper>1e16</upper>
            <effort>10</effort>
            <velocity>10</velocity>
          </limit>
        </axis>
      </joint>
    </xacro:macro>

    <xacro:wheel prefix="left" y_offset="0.15" />
    <xacro:wheel prefix="right" y_offset="-0.15" />


    <!-- DiffDrive Plugin -->
    <!--
    <plugin 
      filename="gz-sim-diff-drive-system"
		  name="gz::sim::systems::DiffDrive">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.158</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <base_frame>base_link</base_frame>
      <publish_rate>50</publish_rate>
      <publish_joint_states>true</publish_joint_states>
    </plugin>
    -->


    <!-- JointState Publisher -->
    <!--
    <plugin
      name="gz::sim::systems::JointStatePublisher"
      filename="libgz-sim-joint-state-publisher-system.so">
    </plugin>
    -->
  </model>
</sdf>
